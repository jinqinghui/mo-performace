struct ip {
  union {
    uint8_t bytes[16];
    uint32_t words[4];
  };
};

struct tcpAddr {
  // note how the slice is embedded in the net.TCPAddr struct
  struct ip* addr;
  long len;
  long cap;
  int port;
};


uprobe:{{ .ExePath }}:"net.(*sysDialer).dialTCP" {
  // {{ .Arg 0 }} is receiver
  // {{ .Arg 1 }}, {{ .Arg 2 }}  is the context.Context...interfaces take two registers
  // {{ .Arg 3}} is laddr
  // {{ .Arg 4}} is raddr
  $raddr = (struct tcpAddr *){{ .Arg 4 }};
  $bytes = $raddr->addr->bytes;
  $words = $raddr->addr->words;
  if ($words[0] == 0 && $words[1] == 0 && $words[2] == 0xffff0000) {
    printf("%d.%d.%d.%d:%d\n", $bytes[12], $bytes[13], $bytes[14], $bytes[15], $raddr->port);
  } else {
    printf("%s:%d\n", ntop(10, $raddr->addr->bytes), $raddr->port);
  }
}
